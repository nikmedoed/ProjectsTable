function toRelease() {
  let FROM = "–ö–∞—Ä—Ç–∞ –ø—Ä–æ–µ–∫—Ç–∞";
  let TO = "!–ö–ü–®";
  var sheets = SSheet.getSheets();

  var regex = new RegExp("'" + FROM + "'", "g");
  let tor = "'" + TO + "'";

  for (var i = 0; i < sheets.length; i++) {
    var sheet = sheets[i];
    var range = sheet.getDataRange();
    var formulas = range.getFormulas();

    for (var j = 0; j < formulas.length; j++) {
      for (var k = 0; k < formulas[j].length; k++) {
        if (formulas[j][k]) {
          if (formulas[j][k].indexOf("INDIRECT") === -1) {
            formulas[j][k] = formulas[j][k].replace(regex, tor);
            sheet.getRange(j + 1, k + 1).setFormula(formulas[j][k]);
          }
        }
      }
    }
  }

  SSheet.deleteSheet(SSheet.getSheetByName(FROM));
  SSheet.getSheetByName(TO).setName(FROM);

  getBlockSheets().forEach(e => SSheet.deleteSheet(e))

  getHided().forEach(e => SSheet.getSheetByName(e).hideSheet())
}


function onOpen() {
  let ui = SpreadsheetApp.getUi()
  ui
    .createMenu('üíé –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–º ')
    .addItem('üìÑ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç', 'generateReport')
    .addItem('üîÄ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –æ—Ç—á—ë—Ç–∞', 'switchReport')
    .addItem('‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –±–ª–æ–∫', 'createNewBlockPrompt')
    .addItem('üìà –†–∞—Å—à–∏—Ä–∏—Ç—å —Ç–∞–π–º–ª–∞–π–Ω', 'showExtendTimeline')
    .addItem('‚ùå –£–¥–∞–ª–∏—Ç—å –±–ª–æ–∫(–∏)', 'showDeleteBlocks')
    .addSubMenu(ui
      .createMenu('üîß –ü–æ—á–∏–Ω–∏—Ç—å')
      .addItem('–ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ', 'reloadGraphsForce')
      .addItem('–û–±–Ω–æ–≤–∏—Ç—å —Ñ–æ—Ä–º—É–ª—É —Ç–µ–∫—É—â–∏—Ö –∑–∞–¥–∞—á', 'temploraryTasksFormula')
      .addItem('–ü–æ–ø—Ä–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á –∏ —Ñ–æ—Ä–º—É–ª—ã', 'bloksDataFix')
      .addItem('–ü–æ–ø—Ä–∞–≤–∏—Ç—å –≥—Ä–∞–Ω–∏—Ü—ã —è—á–µ–µ–∫ –±–ª–æ–∫–æ–≤', 'fixBorders')
    )
    .addItem('üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —à–∞–±–ª–æ–Ω –æ—Ç—á—ë—Ç–∞', 'slidesTemplateLink')
    .addToUi();
}


function createNewBlockPrompt() {
  var ui = SpreadsheetApp.getUi();
  var response = ui.prompt('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–ª–æ–∫–∞', '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –±–ª–æ–∫–∞ —Ä–∞–±–æ—Ç:', ui.ButtonSet.OK_CANCEL);
  if (response.getSelectedButton() == ui.Button.OK) {
    var blockName = response.getResponseText();
    var sheet = SSheet.getSheetByName(blockName);
    if (sheet) {
      ui.alert('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å', '–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∏ –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∏–º—è.', ui.ButtonSet.OK);
    } else {
      createNewBlock(blockName);
    }
  }
}


function showExtendTimeline() {
  var startDate = getTimelineStartDate();
  var endDate = getTimelineEndDate();

  if (!startDate) {
    let timeline = findTimelineBorders(SSheet.getSheetByName(TEMPLATE_MAP))
    if (!timeline.isNew) {
      startDate = timeline.startDate
      endDate = timeline.endDate
    }
  }

  if (!endDate) {
    SpreadsheetApp.getUi().alert('–ü–æ–∫–∞ –Ω–µ–ª—å–∑—è —Ä–∞—Å—à–∏—Ä–∏—Ç—å —Ç–∞–π–º–ª–∞–π–Ω, —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    return;
  }
  var template = HtmlService.createTemplateFromFile('DatePicker');
  template.endDate = endDate.toISOString().split('T')[0];
  template.startDate = startDate.toISOString().split('T')[0];

  var htmlOutput = template.evaluate()
    .setWidth(350)
    .setHeight(250)
    .addMetaTag('viewport', 'width=device-width, initial-scale=1')
  SpreadsheetApp.getUi().showModalDialog(htmlOutput, '–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ç–∞–π–º–ª–∞–π–Ω–∞');
}


function showDeleteBlocks() {
  var blockNames = getBlockNames();
  var template = HtmlService.createTemplateFromFile('DeleteBlockPicker');
  template.blockNames = blockNames;

  var maxWidth = Math.max(...blockNames.map(name => name.length));
  var calculatedWidth = Math.min(Math.max(maxWidth * 10, 400), 800);
  var htmlOutput = template.evaluate()
    .setWidth(calculatedWidth)
    .setHeight(Math.min(100 + 60 * blockNames.length, 700));
  SpreadsheetApp.getUi().showModalDialog(htmlOutput, '–í—ã–±–µ—Ä–∏—Ç–µ –±–ª–æ–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è');
}


function onEdit(e) {
  var sheet = e.source.getActiveSheet();
  var sheetName = sheet.getName();

  var blockSheets = getBlockSheetNames();

  if (blockSheets.has(sheetName)) {
    onBlockEdit(e)
  }
}